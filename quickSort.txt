#include <iostream>
using namespace std;

//merge sort
void PrintArray(int A[], int size)
{
    for(int i=0; i<=size; i++)
    {
        cout<<A[i]<<" ";
    }
}
int partition(int A[], int low, int high)
{
    int pivot=A[low];
    int i=low+1;
    int j=high;
    int temp;
    
do{
 
    while(A[i]<=pivot)
    {
        i++;
    }
    while(A[j]>pivot)
    {
        j--;
    }
    if(i<j)
    {
        temp=A[i];
        A[i]=A[j];
        A[j]=temp;
    }
  }while(i<j);     // do while end
  
  temp=A[low];
  A[low]=A[j];
  A[j]=temp;
  
  return j;
}
void quickSort(int A[], int low, int high)
{
    int p;
    if(low<high)
    {
    p=partition(A, low, high);
      cout<<endl;
    PrintArray(A,9);
  
    quickSort(A,low,p-1);// sorting left array
    quickSort(A,p+1,high);// sorting right array
    }
}
int main()
{
    int A[]={2,1,3,9,4,4,8,7,5,6};
    int size=9;
    
    cout<<"Before Sorting"<<endl;
    PrintArray(A,size);
    quickSort(A,0,size);
    cout<<endl;
    cout<<"After Sorting"<<endl;
    PrintArray(A,size);
    
    return 0;
}