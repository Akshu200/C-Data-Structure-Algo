
#include <iostream>
using namespace std;
//STACK USING ARRAY
struct stack 
{
    int size; 
    int top; 
    int * arr;
};
int isEmpty(struct stack * ptr)
{
    if(ptr->top == -1)
    {
        return 1;
    }
    else{
        return 0;
    }
}
int isFull(struct stack * ptr)
{   
    if(ptr->top == ptr->size-1)
    {
        return 1;
    }
    else 
    {
        return 0;
    }
    
}

void push(struct stack * ptr, int val)
{
    if(isFull(ptr))
    {
        cout<<endl<<"Stack is full, cannot push "<<val<<endl;
    }
    else
    {
        ptr->top++;
        
        ptr->arr[ptr->top]=val;
        
        cout<<endl<<"Value push is ; "<<val<<endl;
    }
}

int pop(struct stack * ptr, int value)
{
    if(isEmpty(ptr))
    {
        cout<<endl<<"Stack is empty no value to delete."<<endl;
    }
    
    else
    {
       value = ptr->arr[ptr->top];
        ptr->top = ptr->top -1; //ptr->top --;
        cout<<endl<<"deleted value : "<<value<<endl;
        return value;
    }
}
int main()
{
    struct stack * sp;
    sp=(struct stack*)malloc(sizeof(struct stack));
    
    sp->size=8;
    sp->top=-1;
    sp->arr=(int *)malloc(sp->size * sizeof(int));
    
    cout<<"before push opertaion,is FULL : "<<isFull(sp);
    cout<<endl;
    cout<<"before pop operation , is Empty : "<<isEmpty(sp);
    
    push(sp, 11);
    push(sp, 21);
    push(sp, 31);
    push(sp, 41);
    push(sp, 51);
    push(sp, 61);
    push(sp, 71);
    push(sp, 81);//pushed 8 value,after this no value will enter,stack is full
    push(sp, 91);
    
    pop(sp, 81);
    cout<<endl;
    cout<<"after push opertaion,is FULL : "<<isFull(sp);
    cout<<endl;
    cout<<"after pop operation ,is Empty : "<<isEmpty(sp);
    return 0;
}